import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler

# Load the dataset
data = pd.read_csv('your_dataset.csv')

# Data Exploration
print(data.info())
print(data.describe())

# Handling Missing Data
data.dropna(inplace=True)  # Or use data.fillna() to impute missing values

# Data Cleaning
data.drop_duplicates(inplace=True)
data = data[['relevant_column1', 'relevant_column2']]  # Select relevant columns

# Data Transformation
data = pd.get_dummies(data, columns=['categorical_column'])

# Feature Scaling
scaler = StandardScaler()
data['numerical_column'] = scaler.fit_transform(data['numerical_column'].values.reshape(-1, 1))

# Feature Engineering (if needed)

# Split Data
X = data.drop('target_column', axis=1)
y = data['target_column']
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Save Preprocessed Data
X_train.to_csv('preprocessed_data_train.csv', index=False)
X_test.to_csv('preprocessed_data_test.csv', index=False)
